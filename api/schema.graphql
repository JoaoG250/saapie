### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthTokens {
  accessToken: String!
  refreshToken: String!
}

input CreateGroupInput {
  name: String!
}

input CreateProcessCategoryInput {
  name: String!
}

input CreateProcessFormInput {
  definition: JSON!
  name: String!
}

input CreateProcessInput {
  description: String!
  form: CreateProcessFormInput!
  forwardToGroupId: ID
  name: String!
  targetGroupId: ID!
}

input CreateUserInput {
  email: String!
  firstName: String!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
  password: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Group {
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type GroupEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Group!
}

input GroupOrderByInput {
  createdAt: SortOrderInput
  name: SortOrderInput
  updatedAt: SortOrderInput
}

input GroupWhereInput {
  name: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  activateAccount(token: String!): Boolean!
  addProcessRequestExtraAttachment(attachment: Upload!, id: ID!): ProcessRequest!
  addUserToGroup(groupId: ID!, userId: ID!): Boolean!
  createGroup(data: CreateGroupInput!): Group!
  createProcess(data: CreateProcessInput!): Process!
  createProcessCategory(data: CreateProcessCategoryInput!): ProcessCategory!
  createProcessRequest(attachments: [Upload!], data: JSON!, processId: ID, processSlug: String): ProcessRequest!
  createUser(data: CreateUserInput!): User!
  deleteGroup(id: ID!): Group!
  deleteProcess(id: ID!): ProcessWithoutRelations!
  deleteProcessRequest(id: ID!): ProcessRequestWithoutRelations!
  deleteUser(id: ID!): UserWithoutRelations!
  refreshTokens(refreshToken: String!): AuthTokens!
  removeProcessRequestExtraAttachment(id: ID!): ProcessRequest!
  removeUserFromGroup(groupId: ID!, userId: ID!): Boolean!
  resetPassword(password: String!, token: String!): Boolean!
  sendPasswordResetEmail(email: String!): Boolean!
  signin(email: String!, password: String!): AuthTokens!
  signup(email: String!, firstName: String!, lastName: String!, password: String!): Boolean!
  updateGroup(data: UpdateGroupInput!, id: ID!): Group!
  updateProcess(data: UpdateProcessInput!, id: ID!): Process!
  updateProcessRequest(attachments: [Upload!], data: JSON!, id: ID!): ProcessRequest!
  updateProcessRequestStatus(id: ID!, status: ProcessRequestStatus!): ProcessRequest!
  updateUser(data: UpdateUserInput!, id: ID!): User!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Process {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  form: ProcessForm
  forwardToGroup: Group
  forwardToGroupId: String
  id: ID!
  name: String!
  slug: String!
  targetGroup: Group!
  targetGroupId: String!
  updatedAt: DateTime!
}

type ProcessCategory {
  createdAt: DateTime!
  id: ID!
  name: String!
  processes: [Process!]!
  slug: String!
  updatedAt: DateTime!
}

type ProcessEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Process!
}

type ProcessForm {
  createdAt: DateTime!
  definition: JSON!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input ProcessOrderByInput {
  createdAt: SortOrderInput
  name: SortOrderInput
  updatedAt: SortOrderInput
}

type ProcessRequest {
  createdAt: DateTime!
  data: JSON!
  id: ID!
  process: Process!
  processId: String!
  status: ProcessRequestStatus!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type ProcessRequestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProcessRequestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProcessRequestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ProcessRequest!
}

input ProcessRequestOrderByInput {
  createdAt: SortOrderInput
  status: SortOrderInput
  updatedAt: SortOrderInput
}

enum ProcessRequestStatus {
  CLOSED
  FORWARDED
  OPEN
  PENDING_CHANGE
}

input ProcessRequestWhereInput {
  processId: String
  status: ProcessRequestStatus
  userId: String
}

type ProcessRequestWithoutRelations {
  createdAt: DateTime!
  data: JSON!
  id: ID!
  processId: String!
  status: ProcessRequestStatus!
  updatedAt: DateTime!
  userId: String!
}

input ProcessWhereInput {
  name: String
}

type ProcessWithoutRelations {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  forwardToGroupId: String
  id: ID!
  name: String!
  slug: String!
  targetGroupId: String!
  updatedAt: DateTime!
}

type Query {
  assignedProcessRequests(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ProcessRequestConnection!
  closedProcessRequests(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ProcessRequestConnection!
  forwardedProcessRequests(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ProcessRequestConnection!
  group(id: ID!): Group
  groups(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    orderBy: GroupOrderByInput
    where: GroupWhereInput
  ): QueryGroups_Connection!
  isEmailAvailable(email: String!): Boolean!
  me: User!
  process(id: ID, slug: String): Process
  processRequest(id: ID!): ProcessRequest
  processRequests(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    orderBy: ProcessRequestOrderByInput
    where: ProcessRequestWhereInput
  ): QueryProcessRequests_Connection!
  processes(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    orderBy: ProcessOrderByInput
    where: ProcessWhereInput
  ): QueryProcesses_Connection!
  user(id: ID!): User
  users(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    orderBy: UserOrderByInput
    where: UserWhereInput
  ): QueryUsers_Connection!
}

type QueryGroups_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [GroupEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryProcessRequests_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProcessRequestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryProcesses_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProcessEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryUsers_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

enum SortOrderInput {
  asc
  desc
}

input UpdateGroupInput {
  name: String!
}

input UpdateProcessFormInput {
  definition: JSON!
  name: String!
}

input UpdateProcessInput {
  active: Boolean!
  description: String!
  form: UpdateProcessFormInput!
  forwardToGroupId: ID
  name: String!
  targetGroupId: ID!
}

input UpdateUserInput {
  email: String!
  firstName: String!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  groups: [Group!]!
  id: ID!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
  updatedAt: DateTime!
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User!
}

input UserOrderByInput {
  createdAt: SortOrderInput
  email: SortOrderInput
  isActive: SortOrderInput
  isVerified: SortOrderInput
  updatedAt: SortOrderInput
}

input UserWhereInput {
  email: String
}

type UserWithoutRelations {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
  updatedAt: DateTime!
}