### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthTokens {
  accessToken: String!
  refreshToken: String!
}

input CreateGroupInput {
  name: String!
}

input CreateProcessFormInput {
  definition: JSON!
  name: String!
}

input CreateProcessInput {
  description: String!
  form: CreateProcessFormInput!
  forwardToGroupId: ID
  name: String!
  targetGroupId: ID!
}

input CreateUserInput {
  email: String!
  firstName: String!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
  password: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Group {
  id: ID!
  name: String!
}

type GroupConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [GroupEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type GroupEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Group!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  activateAccount(token: String!): Boolean!
  addUserToGroup(groupId: ID!, userId: ID!): Boolean!
  createGroup(data: CreateGroupInput!): Group!
  createProcess(data: CreateProcessInput!): Process!
  createUser(data: CreateUserInput!): User!
  deleteGroup(id: ID!): Group!
  deleteProcess(id: ID!): Process!
  deleteUser(id: ID!): User!
  refreshTokens(refreshToken: String!): AuthTokens!
  removeUserFromGroup(groupId: ID!, userId: ID!): Boolean!
  resetPassword(password: String!, token: String!): Boolean!
  sendPasswordResetEmail(email: String!): Boolean!
  signin(email: String!, password: String!): AuthTokens!
  signup(email: String!, firstName: String!, lastName: String!, password: String!): Boolean!
  updateGroup(data: UpdateGroupInput!, id: ID!): Group!
  updateUser(data: UpdateUserInput!, id: ID!): User!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Process {
  description: String!
  form: ProcessForm
  forwardToGroupId: String
  id: ID!
  name: String!
  slug: String!
  targetGroupId: String!
}

type ProcessConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProcessEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProcessEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Process!
}

type ProcessForm {
  definition: JSON!
  id: ID!
  name: String!
}

type Query {
  group(id: ID!): Group
  groups(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): GroupConnection!
  process(id: ID!): Process
  processes(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ProcessConnection!
  user(id: ID!): User
  users(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): UserConnection!
}

input UpdateGroupInput {
  name: String!
}

input UpdateUserInput {
  email: String!
  firstName: String!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
}

type User {
  email: String!
  firstName: String!
  groups: [Group!]!
  id: ID!
  isActive: Boolean!
  isVerified: Boolean!
  lastName: String!
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User!
}